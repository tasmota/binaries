version: 2 # use CircleCI 2.0
workflows:
  version: 2
  build-binaries:
    jobs:
      - build:
          filters:
            branches:
              only: circleci-build
  nightly:
    triggers: #use the triggers key to indicate a scheduled build
      - schedule:
          cron: "0 6 * * *" # use cron syntax to set the schedule
          filters:
            branches:
              only: circleci-build
    jobs:
      - build

jobs: # A basic unit of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    # directory where steps are run
    working_directory: ~/binaries
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.9
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}      
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip && pip install -r requirements.txt
      - run:
          name: Clone latest arendst/tasmota
          command: git clone --branch=development --depth=1 "https://github.com/arendst/Tasmota.git" 
      - run:
          name: Copy overrides
          command: cp platformio_override.ini Tasmota/platformio_override.ini && cp user_config_override.h Tasmota/tasmota/user_config_override.h
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Compile
          command: |
            cd Tasmota
            . ../venv/bin/activate
            pio run
      - run: ls -al
      - run:
          name: Deploy binaries
          command: |
            git clone --branch=master --depth=1 "https://github.com/tasmota/binaries.git" bin 
            cp Tasmota/build_output/firmware/* ~/binaries/bin
            cd ~/binaries/bin
            git config user.name "$USER_NAME"
            git config user.email "$USER_EMAIL"
            git add --all
            git commit --allow-empty -m "Binaries Circle#$CIRCLE_BUILD_NUM [ci skip]"
            git push origin master
